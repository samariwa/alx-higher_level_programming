The 0-matrix_divided module
===================================
Test for the divide matrix function
===================================

This is a function that divides the values of the 2D matrix provided as input
by the number provided as the other input
The input has to be either integers of floats that  are checked and TypeError
exceptions are raise in the case that the are not
The second input (div) cannot be 0 otherwise a ZeroDivisionError is raised
The matrix must be a lists of lists otherwise a TypeError is raised
Each row of the matrix must be of the same size otherwise a TypeError is raised
The values of the results will be rounded off to 2 decimal places

Valid test case
----------------
matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>>print(matrix)
[[1, 2, 3], [4, 5, 6]]

Invalid test cases
-------------------

>>> matrix = [[1, 2, z], [4, t, 6]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: a must be an number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 5], [4, 6]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [1, 2, 5]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = r
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = 12
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
